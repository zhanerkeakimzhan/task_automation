// —Å–∫—Ä–æ–ª–ª –º–µ–∂–¥—É –¥–≤—É–º—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞–º–∏
let currentContainer = 1; // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –∫–∞–∫–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω

document.addEventListener("wheel", function (event) {
    let firstContainer = document.getElementById("firstContainer");
    let secondContainer = document.getElementById("secondContainer");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞
    if (event.deltaY > 0) { 
        // –°–∫—Ä–æ–ª–ª–∏–º –≤–Ω–∏–∑ ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        firstContainer.classList.add("hidden");
        secondContainer.classList.add("visible");
        currentContainer = 2;
    } else { 
        // –°–∫—Ä–æ–ª–ª–∏–º –≤–≤–µ—Ä—Ö ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        firstContainer.classList.remove("hidden");
        secondContainer.classList.remove("visible");
        currentContainer = 1;
    }
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    event.preventDefault();
     
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —É –≤—Å–µ—Ö .cube –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
    document.querySelectorAll(".cube.selected").forEach(cube => {
        cube.classList.remove("selected");
        csvInputContainer.style.display = "none";
        csvInput.value = "";
        preRecordingInputContainer.style.display = "none";
        preRecordingInput.value = "";
        preRecordingListName.value = "";
        document.querySelectorAll('.gender-button').forEach(btn => btn.classList.remove('selected'));
        projectFileContainer.style.display = "none";
        testListInputContainer.style.display = "none";
        testListInput.value = "";
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ—á–∫–∏-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
    updateDots();
}, { passive: false }); // –í–∞–∂–Ω–æ: –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ—á–µ–∫-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
function updateDots() {
    document.querySelectorAll(".dot").forEach((dot, index) => {
        dot.classList.toggle("active", index + 1 === currentContainer);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ç–æ—á–∫–∏
function scrollToContainer(containerNumber) {
    let firstContainer = document.getElementById("firstContainer");
    let secondContainer = document.getElementById("secondContainer");

    if (containerNumber === 1) {
        firstContainer.classList.remove("hidden");
        secondContainer.classList.remove("visible");
        currentContainer = 1;
    } else {
        firstContainer.classList.add("hidden");
        secondContainer.classList.add("visible");
        currentContainer = 2;
    }


    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —É –≤—Å–µ—Ö .cube –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
    document.querySelectorAll(".cube.selected").forEach(cube => {
        cube.classList.remove("selected");
        csvInputContainer.style.display = "none";
        csvInput.value = "";
        preRecordingInputContainer.style.display = "none";
        preRecordingInput.value = "";
        preRecordingListName.value = "";
        document.querySelectorAll('.gender-button').forEach(btn => btn.classList.remove('selected'));
        projectFileContainer.style.display = "none";
        testListInputContainer.style.display = "none";
        testListInput.value = "";
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ—á–∫–∏-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
    updateDots();
}

// –≤—ã–±–æ—Ä–∫–∞ –∫—É–±–∏–∫–æ–≤
function toggleSelection(element) {
    element.classList.toggle("selected");
    // checkContinueButton();
}

document.querySelectorAll("#secondContainer .cube").forEach(cube => {
    cube.addEventListener("click", function () {
        // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫—É–±–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        document.querySelectorAll("#secondContainer .cube").forEach(c => c.classList.remove("selected"));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫—É–±—É
        this.classList.add("selected");
    });
});


document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById("modal");
    const modalContent = document.getElementById("modal-content");
    const openModalBtn = document.createElement("button");
    openModalBtn.textContent = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å";
    openModalBtn.id = "openModalBtn";
    document.body.appendChild(openModalBtn);
    
    openModalBtn.addEventListener("click", function () {
        modalContent.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        
        const selectedCubes = document.querySelectorAll(".cube.selected");
        
        if (selectedCubes.length === 0) {
            modalContent.innerHTML = "<p>–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç!</p>";
        } else {
            modalContent.innerHTML = "<h2>–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ!ü§ìü•π</h2>";
            modalContent.innerHTML += `<div class="input-container">
                                            <h4>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å –ø—Ä–æ–µ–∫—Ç–æ–º:</h4>
                                            <label for="folderInput" class="custom-file-button">–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É</label>
                                            <span id="folderName">–§–∞–π–ª—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã!</span>
                                            <input type="file" id="folderInput" webkitdirectory directory multiple>
                                        </div>`;
            
            console.log(document.getElementById("folderInput")?.hasAttribute("webkitdirectory"));

            // –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
            document.addEventListener("change", function (event) {
                if (event.target && event.target.id === "folderInput") {
                    let files = event.target.files; // –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                    console.log("–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", files);

                    let checkFiles = document.getElementById("folderName");

                    if (files.length > 0) {
                        // checkFiles.textContent = `–í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`;
                        checkFiles.textContent = `–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!`;
                    } else {
                        checkFiles.textContent = "–§–∞–π–ª—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã!";
                    }
            
                    let fileMap = {
                        "domain.yml": null, 
                        "data/rules.yml": null, 
                        "data/stories.yml": null,
                        "data/nlu.yml": null,
                        "actions/actions.py": null
                    };
            
                    let formData = new FormData();
                    let folderName = "";
            
                    for (let file of files) { 
                        let pathParts = file.webkitRelativePath.split("/"); 
                        if (!folderName) {
                            folderName = pathParts[0]; 
                            formData.append("folderName", folderName);
                        }
            
                        if (file.webkitRelativePath.includes("domain.yml")) {
                            fileMap["domain.yml"] = file;
                            formData.append("domain", file);
                        } else if (file.webkitRelativePath.includes("data/rules.yml")) {
                            fileMap["data/rules.yml"] = file;
                            formData.append("rules", file);
                        } else if (file.webkitRelativePath.includes("data/stories.yml")) {
                            fileMap["data/stories.yml"] = file;
                            formData.append("stories", file);
                        } else if (file.webkitRelativePath.includes("data/nlu.yml")) {
                            fileMap["data/nlu.yml"] = file;
                            formData.append("nlu", file);
                        } else if (file.webkitRelativePath.includes("actions/actions.py")) {
                            fileMap["actions/actions.py"] = file;
                            formData.append("actions", file);
                        }
                    }
            
                    let fileInfo = document.getElementById('fileInfo');
                    if (fileMap["domain.yml"] && fileMap["data/rules.yml"] && fileMap["data/stories.yml"] && fileMap["data/nlu.yml"] && fileMap["actions/actions.py"]) {
                        fileInfo.innerText = "–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!";
                        fileInfo.style.color = "green";
            
                        fetch('/upload', { 
                            method: 'POST',
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data))
                        .catch(error => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error));
                    } else {
                        fileInfo.innerText = "–ù–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã!";
                        fileInfo.style.color = "red";
                    }
                }
                checkContinueButton();
            });
            
            selectedCubes.forEach(cube => {
                if (cube.id === "csv") {
                    modalContent.innerHTML += `<div class="input-container"><h4>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ CSV:</h4><input type='text' id='modalCsvInput' placeholder="–¥–ª—è –≤—ã—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ –∏–∑ —ç—Ç–æ–≥–æ –ª–∏—Å—Ç–∞"></div>`;
                } else if (cube.id === "testList") {
                    modalContent.innerHTML += `<div class="input-container"><h4>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ª–∏—Å—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:</h4><input type='text' id='modalTestListInput' placeholder="—á—Ç–æ-–±—ã —Å–æ–∑–¥–∞—Ç—å –ª–∏—Å—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º"></div>`;
                } else if (cube.id === "preRecording") {
                    modalContent.innerHTML += `<div>
                        <div class="gender-container">
                            <h4>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª —Ä–æ–±–æ—Ç–∞:</h4>
                            <button class='gender-button' data-gender='M'>–ú—É–∂</button>
                            <button class='gender-button' data-gender='F'>–ñ–µ–Ω</button>
                        </div>
                                
                        <div class="input-container">
                            <h4>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∞—É–¥–∏–æ:</h4>
                            <input type='text' id='modalPreRecordingInput' placeholder="–¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ">
                        </div>

                        <div class="input-container">
                            <h4>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ª–∏—Å—Ç–∞ –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∏:</h4>
                            <input type='text' id='modalPreRecordingListName' placeholder="—á—Ç–æ-–±—ã —Å–æ–∑–¥–∞—Ç—å –ª–∏—Å—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º">
                        </div>

                    </div>`;
                    // –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª —Ä–æ–±–æ—Ç–∞
                    document.querySelectorAll('.gender-button').forEach(button => {
                        button.addEventListener('click', function () {
                            // –°–±—Ä–æ—Å –≤—ã–¥–µ–ª–µ–Ω–∏—è —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
                            document.querySelectorAll('.gender-button').forEach(btn => btn.classList.remove('selected'));

                            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
                            this.classList.add('selected');
                            selectedGender = this.dataset.gender;
                            localStorage.setItem("selectedGender", selectedGender);
                        });
                    });
                }
            });
            
            // –í–µ—à–∞–µ–º –æ–¥–∏–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –≤–µ—Å—å `document`
            document.addEventListener("click", function (event) {
                if (event.target.classList.contains("gender-button")) {
                    // –°–±—Ä–æ—Å –≤—ã–¥–µ–ª–µ–Ω–∏—è —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
                    document.querySelectorAll('.gender-button').forEach(btn => btn.classList.remove('selected'));

                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
                    event.target.classList.add('selected');

                    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
                    let selectedGender = event.target.dataset.gender;
                    localStorage.setItem("selectedGender", selectedGender);
                    console.log("–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª:", selectedGender);
                }
            });

            // modalContent.innerHTML += `<button id='continueBtn' disabled>–°–æ–∑–¥–∞—Ç—å</button>`;

            if (document.getElementById("firstContainer").querySelector(".selected")) {
                modalContent.innerHTML += `<button id='continueBtn1' disabled>–°–æ–∑–¥–∞—Ç—å</button>`;
            } else if (document.getElementById("secondContainer").querySelector(".selected")) {
                modalContent.innerHTML += `<button id='continueBtn2' disabled>–°–æ–∑–¥–∞—Ç—å</button>`;
            }
        }
        modal.style.display = "flex";
        modal.style.alignItems = "center";
        modal.style.justifyContent = "center";

        const scroll = document.getElementById("scroll-containers");
        scroll.style.overflow = "hidden"; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ñ–æ–Ω
    });
    
    document.getElementById("close-modal").addEventListener("click", function () {
        modal.style.display = "none";
        const scroll = document.getElementById("scroll-containers");
        scroll.style.overflow = "hidden"; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ñ–æ–Ω
    });
    
    window.addEventListener("click", function (event) {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    });
});


// –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –æ–ø–µ—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞ –∫–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–∞–ª—å—à–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
function submitSelection() {
    let selectedCubes = document.querySelectorAll(".cube.selected");
    let selectedIds = Array.from(selectedCubes).map(cube => cube.id);

    
    let csvInputElem = document.getElementById('modalCsvInput');
    let csvInput = csvInputElem ? csvInputElem.value.trim() : "";

    
    let testListInputElem = document.getElementById('modalTestListInput');
    let testListInput = testListInputElem ? testListInputElem.value.trim() : "";
    

    console.log(csvInput);
    console.log(testListInput);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "testList"
    if (selectedIds.includes("testList")) {
        checkExistsList(selectedIds, csvInput, testListInput)
    } else {
        // –ï—Å–ª–∏ "testList" –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
        continueSubmit(selectedIds, csvInput, testListInput);
    }
}

// –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è test-list, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏—Å—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
function checkExistsList(selectedIds, csvInput, testListInput){
    localStorage.setItem("selectedIds", JSON.stringify(selectedIds));
    localStorage.setItem("csvInput", csvInput);
    localStorage.setItem("testListInput", testListInput);

    let modalContent = document.getElementById("modal-content");
    modalContent.innerHTML = `<div class="loading-container">
    <div class="spinner"></div>
    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
    </div>`;

    fetch(`/check_list_exists?name=${encodeURIComponent(testListInput)}`)
            .then(response => response.json())
            .then(data => {
                console.log(data)
                console.log("EXISTS")
                if (data.exists) {
                    showTestListModal()
                } else {
                    continueSubmit(selectedIds, csvInput, testListInput);
                }
            })
            .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–ø–∏—Å–∫–∞:", error));
}

// –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ testList /submit
function continueSubmit(selectedIds, csvInput, testListInput){
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö
    let data = { selected: selectedIds };
    // let preRecordingInput = document.getElementById('preRecordingInput').value.trim();
    // let preRecordingListName = document.getElementById('preRecordingListName').value.trim();
    // selectedGender = localStorage.getItem("selectedGender");


    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–∏—Å—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ DOM
    let preRecordingInputElem = document.getElementById('modalPreRecordingInput');
    let preRecordingListNameElem = document.getElementById('modalPreRecordingListName');

    console.log(preRecordingInputElem)
    console.log(preRecordingListNameElem)

    let preRecordingInput = preRecordingInputElem ? preRecordingInputElem.value.trim() : "";
    let preRecordingListName = preRecordingListNameElem ? preRecordingListNameElem.value.trim() : "";
    let selectedGender = localStorage.getItem("selectedGender"); // –ü–æ–ª—É—á–∞–µ–º –∏–∑ localStorage

    console.log(preRecordingInput)
    console.log(preRecordingListName)
    console.log(selectedGender)


    if (selectedIds.includes("csv") && csvInput) {
        data.csvInput = csvInput;
    } else if (selectedIds.includes("testList") && testListInput) {
        data.testListInput = testListInput;
    } else if (selectedIds.includes("preRecording") && preRecordingInput && preRecordingListName && selectedGender) {
        data.preRecordingInput = preRecordingInput;
        data.preRecordingListName = preRecordingListName;
        data.selectedGender = selectedGender;
    }

    console.log(data)

    let modalContent = document.getElementById("modal-content");
    modalContent.innerHTML = `<div class="loading-container">
    <div class="spinner"></div>
    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
    </div>`;
    
    if (selectedIds.length > 0) {
        fetch('/submit', { 
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data) //–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ /submit, –ø–µ—Ä–µ–¥–∞–≤–∞—è –º–∞—Å—Å–∏–≤ selectedIds. { selected: ["id1", "id2", ...] } –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
        })
        .then(response => response.json()) //–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ JSON.
        .then(data => {
            let modalContent = document.getElementById("modal-content");
            modalContent.innerHTML = ""; // –û—á–∏—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ #modal-content #modal-content ‚Äî –±–ª–æ–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π –≤—Å—Ç–∞–≤—è—Ç –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç.
            
            console.log(JSON.stringify(data, null, 2)); // –õ–æ–≥–∏—Ä—É–µ–º –≤–µ—Å—å –æ—Ç–≤–µ—Ç

            if (!data.responses) {
                console.error("–ü–æ–ª–µ 'responses' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ");
                return;
            }

            let responses = data.responses; // –¢–µ–ø–µ—Ä—å responses ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–∞–º–∏

             // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞
             Object.keys(responses).forEach(key => {
                let section = document.createElement("div");
                section.style.marginBottom = "15px";

                let title = document.createElement("h3");
                if (key == "checkTed") {
                    title.innerText = "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ TedPolicy:";
                    section.appendChild(title);
                } else if (key == "testList"){
                    title.innerText = "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:";
                    section.appendChild(title);
                } else if (key == "csv"){
                    title.innerText = "–°–æ–∑–¥–∞–Ω–∏–µ CSV:";
                    section.appendChild(title);
                } else if (key == "audioProcessing"){
                    title.innerText = "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ:";
                    section.appendChild(title);
                } else if (key == "preRecording"){
                    title.innerText = "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∏:";
                    section.appendChild(title);
                }

                if (Array.isArray(responses[key])) {
                    responses[key].forEach(item => {
                        let p = document.createElement("p");
                        p.innerText = item;
                        p.style.textAlign = "left";

                        // // –ï—Å–ª–∏ –∫–ª—é—á - checkTed, –∫—Ä–∞—Å–∏–º —Ç–µ–∫—Å—Ç –≤ –∫—Ä–∞—Å–Ω—ã–π
                        // if (key === "checkTed") {
                        //     p.style.color = "black";
                        // }

                        section.appendChild(p);
                    });
                } else {
                    let p = document.createElement("p");
                    p.style.textAlign = "left";
                    p.innerHTML = responses[key]; // –í—Å—Ç–∞–≤–ª—è–µ–º HTML (–¥–ª—è —Å—Å—ã–ª–æ–∫ –≤ csv)
                    section.appendChild(p);
                }

                modalContent.appendChild(section);
            });
            
            // Object.values(data.responses).forEach(text => { //–ü–µ—Ä–µ–±–∏—Ä–∞–µ—Ç responses –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞.
            //     let p = document.createElement("p");
            //     p.innerHTML = text; // –°–æ–∑–¥–∞–µ—Ç p –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –≤ –Ω–µ–≥–æ text
            //     modalContent.appendChild(p); //–î–æ–±–∞–≤–ª—è–µ—Ç p –≤ modalContent
            // });

            // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω CSV, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            // if (selectedIds.includes("csv")) {
            //     let csvDownload = document.createElement("a");
            //     csvDownload.href = "/download_csv";
            //     document.body.appendChild(csvDownload);
            //     csvDownload.click();
            //     document.body.removeChild(csvDownload);
            
            //     // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º Excel
            //     setTimeout(() => {
            //         let excelDownload = document.createElement("a");
            //         excelDownload.href = "/download_excel";
            //         document.body.appendChild(excelDownload);
            //         excelDownload.click();
            //         document.body.removeChild(excelDownload);
            //     }, 1000); // 500 –º—Å –∑–∞–¥–µ—Ä–∂–∫–∞ (–º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å, –µ—Å–ª–∏ –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç)
            // }
            
            showModal(); // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error));
    } else {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç!");
    }
}

// –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ "—Å–æ–∑–¥–∞–ª–æ—Å—å, —Ç.–¥"
function showModal() {
    let modal = document.getElementById("modal");
    modal.style.display = "block"; //–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç #modal, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è display: block
}

document.getElementById("close-modal").addEventListener("click", function() {
    document.getElementById("modal").style.display = "none"; //–ó–∞–∫—Ä—ã–≤–∞–µ—Ç #modal
    fetch('/delete_folder', { // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ /delete_folder
        method: 'POST',
    }).then(response => response.json())
      .then(data => {
          console.log('Folder deleted successfully:', data);
      })
      .catch(error => {
          console.error('Error deleting folder:', error);
      });
    location.reload();
});

// –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ test-list, –µ—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
function showTestListModal() {
    let modal = document.getElementById("modal-test-list");
    modal.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ

    let modalContent = document.getElementById("modal-content-test-list");
    modalContent.innerHTML = `
        <h2>–¢–∞–∫–æ–π –ª–∏—Å—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?</h2>
        <div class="button-wrapper">
            <button id="overwriteListBtn" onclick="overwriteList()">–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å</button>
        </div>

        <div class="input-wrapper">
            <input type="text" id="newTestListName" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ">
            <button id="submitNewNameBtn" onclick="submitNewName()">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </div>
    `;
}

function overwriteList() {
    let modal = document.getElementById("modal-test-list");
    let selectedIds = JSON.parse(localStorage.getItem("selectedIds"));
    let csvInput = localStorage.getItem("csvInput");
    let testListInput = localStorage.getItem("testListInput");

    closeModal();
    continueSubmit(selectedIds, csvInput, testListInput);
}

function submitNewName() {
    let selectedIds = JSON.parse(localStorage.getItem("selectedIds"));
    let csvInput = localStorage.getItem("csvInput");
    let newTestListName = document.getElementById('newTestListName').value.trim();
    localStorage.setItem("testListInput", newTestListName);
    
    closeModal();

    console.log(newTestListName)
    checkExistsList(selectedIds, csvInput, newTestListName)
}

function closeModal() {
    let modal = document.getElementById("modal-test-list");
    modal.style.display = "none";
}

document.getElementById("close-modal-test-list").addEventListener("click", function() {
    document.getElementById("modal-test-list").style.display = "none"; //–ó–∞–∫—Ä—ã–≤–∞–µ—Ç #modal
    fetch('/delete_folder', { // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ /delete_folder
        method: 'POST',
    }).then(response => response.json())
      .then(data => {
          console.log('Folder deleted successfully:', data);
      })
      .catch(error => {
          console.error('Error deleting folder:', error);
      });
    location.reload();
});


// –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è test-list
function showActionsModal() {
    let modal = document.getElementById("modal-actions");
    modal.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ

    let modalContent = document.getElementById("modal-content-actions");
    modalContent.innerHTML = `
        <p>–ï—Å—Ç—å —Ä—É–ª—Å –∫–æ—Ç–æ—Ä—ã–π —É—Ö–æ–¥–∏—Ç—å –Ω–∞ —ç–∫—à–Ω—ã</p>
        <button id="skipBtn" onclick="overwriteList()">–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</button>
        <button id="manuallyBtn" onclick="enterManually()">–í–≤–µ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –≤—Ä—É—á–Ω—É—é</button>
    `;
}

function enterManually() {
    let selectedIds = JSON.parse(localStorage.getItem("selectedIds"));
    let csvInput = localStorage.getItem("csvInput");
    let newTestListName = document.getElementById('newTestListName').value.trim();
    localStorage.setItem("testListInput", newTestListName);
    
    console.log(newTestListName)
    checkExistsList(selectedIds, csvInput, newTestListName)
}



// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
function checkContinueButton() {
    let selectedCubes = document.querySelectorAll(".cube.selected").length > 0;
    let filesUploaded = document.getElementById("fileInfo").innerText === "–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!";
    
    console.log("–í—ã–±—Ä–∞–Ω—ã –∫—É–±—ã:", selectedCubes);
    console.log("–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", filesUploaded);

    let btn1 = document.getElementById("continueBtn1");
    let btn2 = document.getElementById("continueBtn2");
    if (selectedCubes && filesUploaded) {
        if (btn1) {
            btn1.removeAttribute("disabled");
            btn1.onclick = function () {
                console.log("–ö–Ω–æ–ø–∫–∞ –∏–∑ firstContainer –Ω–∞–∂–∞—Ç–∞!");
                // –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä:
                submitSelection();
            };
        }
        
        if (btn2) {
            btn2.removeAttribute("disabled");
            btn2.onclick = function () {
                console.log("–ö–Ω–æ–ø–∫–∞ –∏–∑ secondContainer –Ω–∞–∂–∞—Ç–∞!");
                // –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é:
                submitSelection();
            };
        }
        // btn.removeAttribute("disabled"); // –£–±–∏—Ä–∞–µ–º disabled
        // btn.onclick = submitSelection; // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    } else {
        btn1.setAttribute("disabled", "true"); // –°—Ç–∞–≤–∏–º –æ–±—Ä–∞—Ç–Ω–æ, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
        btn2.setAttribute("disabled", "true"); // –°—Ç–∞–≤–∏–º –æ–±—Ä–∞—Ç–Ω–æ, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
        btn1.onclick = null; // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        btn2.onclick = null; // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    }
}
